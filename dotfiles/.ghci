
:set prompt-function \modules _ -> pure (mconcat [case modules of topmost:_ -> topmost; [] -> "", " \ESC[0;36mÎ»> \ESC[m"] )
:set prompt-cont "\ESC[0;36m|  \ESC[m"

-- :def pp   \_ -> pure (":set -interactive-print Text.Pretty.Simple.pPrint")
:def pp   \_ -> pure (":set -interactive-print Text.Show.Pretty.pPrint")
:def nopp \_ -> pure (":set -interactive-print System.IO.print")

dotGHCI_escapeShellArg arg = "'" ++ concatMap (\c -> if c == '\'' then "'\\''" else [c]) arg ++ "'"
:def! doc return . (":!hoogle --database .haskell.hoo -q --color --info " ++) . dotGHCI_escapeShellArg
:def hoogle return . (":!hoogle --database .haskell.hoo -q --count=10 --color " ++) . dotGHCI_escapeShellArg
:def doctest return . (":!cabal repl -w doctest " ++) . dotGHCI_escapeShellArg

:set -Wall
:set -Wcompat
:set -Wincomplete-record-selectors
:set -Wincomplete-record-updates
:set -Wincomplete-uni-patterns
:set -Wredundant-constraints
:set  -Wno-missing-home-modules
:set  -Wno-unused-imports
:seti -Wno-partial-type-signatures
:seti -Wno-type-defaults

:set -fmax-valid-hole-fits=6
:set -fmax-refinement-hole-fits=3
:set -frefinement-level-hole-fits=1
:set -fsort-by-subsumption-hole-fits
:set -funclutter-valid-hole-fits

:set -fdefer-type-errors
:set -fno-defer-typed-holes
:set -Werror=deferred-type-errors
:set -Werror=deferred-out-of-scope-variables

:set -ferror-spans
:set -freverse-errors
:set -fno-show-error-context
:set -fprint-expanded-synonyms
:set -fprint-unicode-syntax

:set -fbyte-code-and-object-code
:set -fprefer-byte-code
:set -fhide-source-paths
