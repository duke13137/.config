{
  "chat.commandCenter.enabled": false,
  "chat.editor.fontSize": 15,
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.console.fontSize": 15,
  "debug.openDebug": "openOnDebugBreak",
  "diffEditor.wordWrap": "off",
  "errorLens.delayMode": "debounce",
  "errorLens.enabled": false,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.tabCompletion": "on",
  "editor.fontFamily": "'Cascadia Code', 'JetBrainsMono NF'",
  "editor.fontLigatures": true,
  "editor.fontSize": 16,
  "markdown.preview.fontSize": 16,
  "editor.fontWeight": 300,
  "editor.formatOnSave": true,
  "editor.inlayHints.enabled": "off",
  "editor.minimap.autohide": true,
  "editor.scrollBeyondLastLine": false,
  "editor.semanticHighlighting.enabled": true,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.wordWrap": "off",
  "files.eol": "\n",
  "files.exclude": {
    "**/.calva": true,
    "**/.classpath": true,
    "**/.clj-kondo": true,
    "**/.cpcache": true,
    "**/.factorypath": true,
    "**/.lsp": true,
    "**/.project": true,
    "**/.settings": true
  },
  "search.exclude": {
    "**/.clj-kondo": true,
    "**/.cpcache": true,
    "**/.hie": true,
    "**/.stack-work": true,
    "**/*.class": true
  },
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.fontFamily": "JetBrainsMonoNL NFM",
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.fontWeight": 300,
  "terminal.integrated.fontWeightBold": 500,
  "terminal.integrated.allowChords": false,
  "terminal.integrated.sendKeybindingsToShell": true,
  "workbench.activityBar.location": "top",
  "workbench.colorTheme": "Night Owl (No Italics)",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none",
  "calva.autoEvaluateCode": {
    "onConnect": {
      "clj": "(do (in-ns 'user) (defn read-spy [form] (require 'sc.api) `(sc.api/spy ~form)) (defn read-letsc [form] `(sc.api/letsc ~((requiring-resolve 'sc.api/last-ep-id)) ~form)) (set! *data-readers* (assoc *data-readers* 'sc/letsc #'read-letsc 'sc/spy #'read-spy)))",
      "cljs": ""
    },
    "onFileLoaded": {
      "clj": "(require 'sc.api)",
      "cljs": ""
    }
  },
  "calva.customREPLCommandSnippets": [
    {
      "name": "tap *1",
      "key": "1",
      "snippet": "(tap> *1)"
    },
    {
      "name": "tap *2",
      "key": "2",
      "snippet": "(tap> *2)"
    },
    {
      "name": "eval letsc",
      "key": "e",
      "snippet": "#sc/letsc $current-form"
    },
    {
      "name": "tap ep-info",
      "key": "i",
      "snippet": "(tap> (sc.api/ep-info))"
    },
    {
      "name": "def locals",
      "key": "l",
      "snippet": "(eval `(sc.api/defsc ~(sc.api/last-ep-id)))"
    },
    {
      "name": "undef locals",
      "key": "u",
      "snippet": "(eval `(sc.api/undefsc ~(sc.api/last-ep-id)))"
    },
    {
      "name": "print stacktrace",
      "repl": "clj",
      "snippet": "((requiring-resolve 'clj-commons.pretty.repl/pretty-pst))"
    },
    {
      "name": "Reload namespace",
      "repl": "clj",
      "snippet": "((requiring-resolve 'clj-reload.core/reload))"
    }
  ],
  "calva.prettyPrintingOptions": {
    "printEngine": "calva",
    "enabled": true,
    "width": 120,
    "maxLength": 50
  },
  "[clojure]": {
    "editor.parameterHints.enabled": true
  },
  "emmet.triggerExpansionOnTab": true,
  "emmet.includeLanguages": {
    "haskell": "html"
  },
  "haskell.manageHLS": "PATH",
  "jdk.test.editor.enableShortcuts": true,
  "launch": {
    "configurations": [
      {
        "type": "lldb",
        "request": "launch",
        "name": "Debug opened file",
        "cwd": "${workspaceFolder}",
        "program": "${fileDirname}/${fileBasenameNoExtension}",
        "args": []
      }
    ]
  },
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1,
    "vscodevim.vim": 1
  },
  "vim.sneak": true,
  "vim.useCtrlKeys": false,
  "vscode-neovim.neovimExecutablePaths.linux": "/home/hacker/.local/bin/nvim",
  "vscode-neovim.useWSL": true,
  "vscode-neovim.ctrlKeysForInsertMode": [
    "o",
    "r",
    "u"
  ],
  "vscode-neovim.ctrlKeysForNormalMode": [
    "d",
    "i",
    "o",
    "r",
    "t",
    "u",
    "v",
    "w",
    "right",
    "left",
    "up",
    "down",
    "backspace",
    "delete"
  ],
  "vscode-neovim.autoGeneratedDocumentSchemes": [
    "output",
    "output.calva-repl",
    "vscode-chat-code-block",
    "vscode-copilot-chat-code-block"
  ]
}